package com.example.blushfinance.db; // Or your models package

import androidx.room.Entity;
import androidx.room.PrimaryKey;

/**
 * Represents a single expense item.
 * This class is now a Room Entity, defining a table for expenses in the database.
 */
@Entity(tableName = "expense_cards") // Specifies the table name for this entity
public class ExpenseCard {

    @PrimaryKey(autoGenerate = true) // Marks 'id' as the primary key, auto-generated by Room
    public int id;                   // Unique ID for each expense record in the database

    private String name;    // Name or category of the expense (e.g., "Groceries", "Rent")
    private float amount;   // The monetary amount of the expense
    private int itemColor;  // Color used for UI representation

    /**
     * Constructor for creating an ExpenseCard.
     * Room can use this constructor. The 'id' is auto-generated by Room.
     * @param name The name or category of the expense.
     * @param amount The amount of the expense.
     * @param itemColor The color associated with this expense item.
     */
    public ExpenseCard(String name, float amount, int itemColor) {
        this.name = name;
        this.amount = amount;
        this.itemColor = itemColor;
    }

    // --- Getters ---
    // Room uses these (or public fields) to read data when fetching from the database.

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public float getAmount() {
        return amount;
    }

    public int getItemColor() {
        return itemColor;
    }

    // --- Setters ---
    // Room might use these if it needs to set fields after creating an instance.

    // public void setId(int id) { // Setter for id is not typically needed for auto-generated keys
    //     this.id = id;
    // }

    public void setName(String name) {
        this.name = name;
    }

    public void setAmount(float amount) {
        this.amount = amount;
    }

    public void setItemColor(int itemColor) {
        this.itemColor = itemColor;
    }
}
